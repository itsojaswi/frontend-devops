name: Frontend CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-push-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build frontend
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend_image:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend_image:latest

      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            set -e  # Exit immediately if a command exits with a non-zero status.
            echo "Checking Docker version..."
            docker --version
            echo "Logging into Docker Hub..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            echo "Pulling latest frontend image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend_image:latest
            echo "Stopping and removing existing container (if any)..."
            docker stop frontend_container || true
            docker rm frontend_container || true
            echo "Running new frontend container..."
            docker run -d --name frontend_container -p 3000:80 ${{ secrets.DOCKER_USERNAME }}/frontend_image:latest
            echo "Deployment complete. Listing running containers..."
            docker ps -a

      - name: Verify Image on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            echo "Listing Docker images on EC2..."
            docker images
            echo "Listing running Docker containers on EC2..."
            docker ps -a
